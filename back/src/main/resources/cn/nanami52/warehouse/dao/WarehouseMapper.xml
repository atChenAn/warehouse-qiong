<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.nanami52.warehouse.dao.WarehouseMapper" >
  <resultMap id="BaseResultMap" type="cn.nanami52.warehouse.entity.Warehouse" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="bom_id" property="bomId" jdbcType="INTEGER" />
    <result column="planner_id" property="plannerId" jdbcType="INTEGER" />
    <result column="repertory" property="repertory" jdbcType="REAL" />
    <result column="plan_demand" property="planDemand" jdbcType="REAL" />
    <result column="create_time" property="createTime" jdbcType="INTEGER" />
    <result column="is_del" property="isDel" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, bom_id, planner_id, repertory, plan_demand, create_time, is_del
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from warehouse
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from warehouse
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.nanami52.warehouse.entity.Warehouse" >
    insert into warehouse (id, bom_id, planner_id, 
      repertory, plan_demand, create_time, 
      is_del)
    values (#{id,jdbcType=INTEGER}, #{bomId,jdbcType=INTEGER}, #{plannerId,jdbcType=INTEGER}, 
      #{repertory,jdbcType=REAL}, #{planDemand,jdbcType=REAL}, #{createTime,jdbcType=INTEGER}, 
      #{isDel,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.nanami52.warehouse.entity.Warehouse" >
    insert into warehouse
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="bomId != null" >
        bom_id,
      </if>
      <if test="plannerId != null" >
        planner_id,
      </if>
      <if test="repertory != null" >
        repertory,
      </if>
      <if test="planDemand != null" >
        plan_demand,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="isDel != null" >
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bomId != null" >
        #{bomId,jdbcType=INTEGER},
      </if>
      <if test="plannerId != null" >
        #{plannerId,jdbcType=INTEGER},
      </if>
      <if test="repertory != null" >
        #{repertory,jdbcType=REAL},
      </if>
      <if test="planDemand != null" >
        #{planDemand,jdbcType=REAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.nanami52.warehouse.entity.Warehouse" >
    update warehouse
    <set >
      <if test="bomId != null" >
        bom_id = #{bomId,jdbcType=INTEGER},
      </if>
      <if test="plannerId != null" >
        planner_id = #{plannerId,jdbcType=INTEGER},
      </if>
      <if test="repertory != null" >
        repertory = #{repertory,jdbcType=REAL},
      </if>
      <if test="planDemand != null" >
        plan_demand = #{planDemand,jdbcType=REAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="isDel != null" >
        is_del = #{isDel,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.nanami52.warehouse.entity.Warehouse" >
    update warehouse
    set bom_id = #{bomId,jdbcType=INTEGER},
      planner_id = #{plannerId,jdbcType=INTEGER},
      repertory = #{repertory,jdbcType=REAL},
      plan_demand = #{planDemand,jdbcType=REAL},
      create_time = #{createTime,jdbcType=INTEGER},
      is_del = #{isDel,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>