<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.nanami52.warehouse.dao.UserGroupMapper">
    <resultMap id="BaseResultMap" type="cn.nanami52.warehouse.entity.UserGroup">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="group_name" property="groupName" jdbcType="VARCHAR"/>
        <result column="group_auths" property="groupAuths" jdbcType="VARCHAR"/>
        <result column="group_status" property="groupStatus" jdbcType="INTEGER"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="is_del" property="isDel" jdbcType="TINYINT"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, group_name, group_auths, group_status, remark, is_del
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user_group
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_group
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="cn.nanami52.warehouse.entity.UserGroup">
    insert into user_group (id, group_name, group_auths, 
      group_status, remark, is_del
      )
    values (#{id,jdbcType=INTEGER}, #{groupName,jdbcType=VARCHAR}, #{groupAuths,jdbcType=VARCHAR}, 
      #{groupStatus,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{isDel,jdbcType=TINYINT}
      )
  </insert>
    <insert id="insertSelective" parameterType="cn.nanami52.warehouse.entity.UserGroup">
        insert into user_group
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="groupName != null">
                group_name,
            </if>
            <if test="groupAuths != null">
                group_auths,
            </if>
            <if test="groupStatus != null">
                group_status,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="isDel != null">
                is_del,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="groupName != null">
                #{groupName,jdbcType=VARCHAR},
            </if>
            <if test="groupAuths != null">
                #{groupAuths,jdbcType=VARCHAR},
            </if>
            <if test="groupStatus != null">
                #{groupStatus,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="isDel != null">
                #{isDel,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="cn.nanami52.warehouse.entity.UserGroup">
        update user_group
        <set>
            <if test="groupName != null">
                group_name = #{groupName,jdbcType=VARCHAR},
            </if>
            <if test="groupAuths != null">
                group_auths = #{groupAuths,jdbcType=VARCHAR},
            </if>
            <if test="groupStatus != null">
                group_status = #{groupStatus,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="isDel != null">
                is_del = #{isDel,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.nanami52.warehouse.entity.UserGroup">
    update user_group
    set group_name = #{groupName,jdbcType=VARCHAR},
      group_auths = #{groupAuths,jdbcType=VARCHAR},
      group_status = #{groupStatus,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <select id="selectAll" resultMap="BaseResultMap">
    select * from user_group
  </select>
    <select id="getUserGroupByUserId" resultMap="BaseResultMap" parameterType="String">
        SELECT
        user_auth.id,
        user_auth.userId,
        user_auth.groupId,
        user_group.group_name
        FROM
        user_auth
        LEFT JOIN user_group ON user_auth.groupId = user_group.id
    </select>
</mapper>